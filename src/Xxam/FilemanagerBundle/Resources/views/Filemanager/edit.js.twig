{% set iconsize = '16x16' %}
{% set buttonsize = 'medium' %}
{% if buttonsize == 'large' %}
    {% set iconsize = '32x32' %}
{% endif %}
{
    tabtitle: '{% if entity.id %}{% trans with {'%filesystemname%': entity.filesystemname} %}Edit %filesystemname%{% endtrans %}{% else %}{% trans %}Create new filesystem{% endtrans %}{% endif %}',
    getitems: function (){
        if (typeof(FilemanagerModel)=='undefined'){
          Ext.define('FilemanagerModel',{
             extend: 'Ext.data.Model',
             fields: {{modelfields|json_encode(false)|raw}},
             idProperty: 'id',
             proxy: {
                type: 'rest',
                url : '{{path('post_filemanager')}}',
                writer: {
                    type: "json",
                    writeAllFields: true
                }
            }
          });
        }
        var filesystemadapters={{filesystemadapters|json_encode()|raw}};
        var filesystemadaptersdata=[];
        Ext.Object.each(filesystemadapters, function(key,value){
            filesystemadaptersdata.push({'id':key,'value':key});
        });

        var filesystemadaptersStore = Ext.create('Ext.data.Store', {
            fields: ['id', 'value'],
            data : filesystemadaptersdata
        });
        
        return {
            xtype: 'form',
            layout: 'form',
            defaultType: 'textfield',
            defaults: {
                labelWidth: 120
            },
            items: [{
                xtype: 'hiddenfield',
                name: 'id',
                value: '{{entity.id}}'
            },{
                xtype: 'combo',
                fieldLabel: 'Type',
                name: 'Adapter',
                store: filesystemadaptersStore,
                queryMode: 'local',
                displayField: 'value',
                valueField: 'id',
                value: '{{entity.getAdapter()}}'
            },{
                // Fieldset in Column 1 - collapsible via toggle button
                xtype:'fieldset',
                //columnWidth: 0.5,
                title: 'Settings',
                collapsible: false,
                defaultType: 'textfield',
                //defaults: {anchor: '100%'},
                //layout: 'anchor',
                width: '800',
                layout: {
                    type: 'vbox'
                },
                items :[{
                    fieldLabel: 'Field 1',
                    name: 'field1'
                }, {
                    fieldLabel: 'Field 2',
                    name: 'field2'
                }]
            }],
            buttons: [{
                text: '{%trans%}Save{%endtrans%}',
                handler: function() {
                    // The getForm() method returns the Ext.form.Basic instance:
                    var form = this.up('form').getForm();
                    if (form.isValid()) {
                        console.log(typeof(FilemanagerModel));
                        var newfilesystem=Ext.create('FilemanagerModel',form.getValues());
                        console.log(newfilesystem);
                        
                        // Submit the Ajax request and handle the response
                        newfilesystem.save({
                            scope: this.up('form'),
                            success: function(filesystem) {
                                ttt=this;
                                this.up('panel').close();
                                if (typeof Ext.getCmp('filesystem_filesystemlist') !='undefined'){
                                    Ext.getCmp('filesystem_filesystemlist').getStore().load({
                                        callback: function(records, operation, success) {
                                            //Ext.getCmp('mailclient_maillist').view.scrollTo(0,scrollpos);
                                        }
                                    });
                                }
                               //Ext.Msg.alert('Success', action.result.message);
                            },
                            failure: function(filesystem) {
                            
                                //Ext.Msg.alert('Failed', action.result ? action.result.message : 'No response');
                            }
                        });
                    }
                }
            }]
        }
    }
}