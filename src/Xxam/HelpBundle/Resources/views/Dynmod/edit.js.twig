{% set iconsize = '16x16' %}
{% set buttonsize = 'medium' %}
{% if buttonsize == 'large' %}
{% set iconsize = '32x32' %}
{% endif %}
{
    tabtitle: '{% if entity.id %}{% trans with {'%code%': entity.code, '%id%': entity.id} %}Edit %code% (%id%){% endtrans %}{% else %}{% trans %}Create new Dynamic Module{% endtrans %}{% endif %}',
    iconCls: 'x-fa fa-cube',
    getitems: function(){
    if (typeof(HelpModel)=='undefined'){
        Ext.define('HelpModel',{
            extend: 'Ext.data.Model',
            fields: {{modelfields|jscode(false)}},
            idProperty: 'id',
            proxy: {
                type: 'rest',
                url : '{{path('post_help')}}',
                writer: {
                    type: "json",
                    writeAllFields: true
                }
            }
        });
    }


    return {
        xtype: 'form',
        layout: 'form',
        defaultType: 'textfield',
        scrollable: true,
        defaults: {
            labelWidth: 120
        },
        items: [{
            xtype: 'hiddenfield',
            name: 'id',
            value: '{{entity.id}}'
        },{
            fieldLabel: 'Code',
            name: 'code',
            value: '{{entity.code}}'
        },{
            fieldLabel: 'Name',
            name: 'name',
            value: '{{entity.name}}'
        },{
            fieldLabel: 'Description',
            name: 'description',
            value: '{{entity.description}}'
        },{
            fieldLabel: 'Help',
            name: 'help',
            value: '{{entity.help}}'
        }],
        dockedItems: [{
            xtype: 'toolbar',
            dock: 'bottom',
            ui: 'footer',
            //defaults: {minWidth: minButtonWidth},
            items: [{% if log %}
                { xtype: 'tbtext', html: 'Version {{ log.getVersion() }} from {{ log.getLoggedAt()|localizeddate('short','short') }} created by {{ log.getUsername() }}' },
                {% endif %}
                { xtype: 'component', flex: 1 },
                {
                    xtype: 'button',
                    text: '{%trans%}Save{%endtrans%}',
                    handler: function() {
                        // The getForm() method returns the Ext.form.Basic instance:
                        var form = this.up('form').getForm();
                        if (form.isValid()) {
                            console.log(typeof(HelpModel));
                            var newhelp=Ext.create('HelpModel',form.getValues());
                            console.log(newhelp);

                            // Submit the Ajax request and handle the response
                            newhelp.save({
                                scope: this.up('form'),
                                success: function(help) {
                                    ttt=this;
                                    this.up('panel').close();
                                    if (typeof Ext.getCmp('helplist') !='undefined'){
                                        Ext.getCmp('helplist').getStore().load({
                                            callback: function(records, operation, success) {
                                                //Ext.getCmp('mailclient_maillist').view.scrollTo(0,scrollpos);
                                            }
                                        });
                                    }
                                    //Ext.Msg.alert('Success', action.result.message);
                                },
                                failure: function(help, operation) {
                                    ttt=this;
                                    ddd=help;
                                    ooo=operation;
                                    console.log(this,help,operation.error.response.responseText);
                                    var error=Ext.JSON.decode(operation.error.response.responseText);
                                    if (error){
                                        if(error.errors && error.errors.form && error.errors.form.children){
                                            var errors=[];
                                            Ext.Object.each(error.errors.form.children,function(key,value){
                                                errors.push({field:key,message:value.errors});
                                            });
                                            this.getForm().markInvalid(errors);
                                            console.log(errors);
                                        }
                                    }
                                    //Ext.Msg.alert('Failed', action.result ? action.result.message : 'No response');
                                }
                            });
                        }
                    }
                }
            ]
        }]

    }
}
}