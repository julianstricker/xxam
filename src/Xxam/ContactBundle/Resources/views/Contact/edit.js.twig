{% set iconsize = '16x16' %}
{% set buttonsize = 'medium' %}
{% if buttonsize == 'large' %}
    {% set iconsize = '32x32' %}
{% endif %}
{
    tabtitle: '{% if entity.id %}{% trans with {'%firstname%': entity.firstname, '%lastname%': entity.lastname} %}Edit %firstname% %lastname%{% endtrans %}{% else %}{% trans %}Create new contact{% endtrans %}{% endif %}',
    iconCls: 'x-fa fa-user',
    getitems: function(){
        if (typeof(ContactModel)=='undefined'){
          Ext.define('ContactModel',{
             extend: 'Ext.data.Model',
             fields: {{modelfields|jscode(false)}},
             idProperty: 'id',
             proxy: {
                type: 'rest',
                url : '{{path('post_contact')}}',
                writer: {
                    type: "json",
                    writeAllFields: true
                }
            }
          });
        }
        var contacttypesStore = Ext.create('Ext.data.Store', {
            fields: ['id', 'value'],
            data : {{contacttypes|jscode()}}
        });
        var communicationdatatypes={{ communicationdatatypes|jscode() }};

        var emailtypesdata=[];
        Ext.Object.each(communicationdatatypes.email,function(key,value){
            emailtypesdata.push({id:key,value:value});
        });

        var emailtypesStore = Ext.create('Ext.data.Store', {
           fields: ['id', 'value'],
            data: emailtypesdata
        });



    var generateEmailinput=function(value,disabled){
        return {
            xtype: 'fieldcontainer',
            layout:'hbox',
            shrinkWrap: 1,
            hideLabel: true,
            items: [
                {
                    xtype: 'combo',
                    fieldLabel: 'Type',
                    name: 'communicationdata_communicationdatatype_id',
                    queryMode: 'local',
                    displayField: 'value',
                    valueField: 'id',
                    editable: false,
                    store: emailtypesStore,
                    value: value.type_id,
                    flex: 2
                },{
                    xtype: 'textfield',
                    flex: 1,
                    name: 'communicationdata_value',
                    fieldLabel: 'Email',
                    labelAlign: 'right',
                    labelSeparator: ' ',
                    labelWidth: 'auto',
                    value: value.value,
                    validators: {
                        type: 'email'
                    }
                },
                {
                    xtype: 'button',
                    flex: 0,
                    width: 50,
                    iconCls: 'x-fa fa-minus',
                    margin: '0 0 0 5',
                    scale: "small",
                    tooltip: '{%trans%}Remove{%endtrans%}',
                    disabled: disabled,
                    handler: function(){
                        ttt=this;
                        var fieldcontainer=this.up('fieldcontainer');
                        var fieldcontainerparent=fieldcontainer.up();
                        fieldcontainerparent.remove(fieldcontainer);
                        if (fieldcontainerparent.items.length==1){
                            fieldcontainerparent.down('button').setDisabled(true);
                        }
                    }
                }
            ]
        }
    }
    var emails = {{ entity.getCommunicationdataEmails() ? entity.getCommunicationdataEmails()|jsonwithfunctions : '[]' }};
    var emailsinputs=[];
    if(emails.length==0) emails.push({'':''});
    Ext.Array.each(emails,function(email){
       emailsinputs.push(generateEmailinput(email,emails.length==1));
    });

        
        return {
            xtype: 'form',
            layout: 'hbox',
            defaultType: 'textfield',
            scrollable: true,
            defaults: {
               // labelWidth: 120
            },
            fieldDefaults: {
              //  anchor: '100%'
            },
            items: [{
                xtype: 'fieldcontainer',
                layout: {
                    type: 'hbox'
                },
                margin: '0 0 0 10',
                flex: 5,
                //shrinkWrap: 3,
                //defaultType: 'textfield',
                defaults: {
                    //labelAlign: 'top'
                },
                items: [{
                    xtype: 'fieldcontainer',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'  // Child items are stretched to full width
                    },
                    //shrinkWrap: 2,
                    defaultType: 'textfield',
                    defaults: {
                        labelAlign: 'top'
                    },
                    //flex:1,
                    items: [{
                        xtype: 'hiddenfield',
                        name: 'id',
                        value: '{{ entity.id }}'
                    }, {
                        xtype: 'combo',
                        fieldLabel: 'Type',
                        name: 'contacttype_id',
                        store: contacttypesStore,
                        queryMode: 'local',
                        displayField: 'value',
                        valueField: 'id',
                        value: '{{ entity.getContacttypeId }}',
                        flex: 2
                    }, {
                        fieldLabel: '{%trans%}Organisation name{%endtrans%}',
                        name: 'organizationname',
                        value: '{{ entity.organizationname }}'
                    }, {
                        hideLabel: true,
                        xtype: 'fieldcontainer',
                        layout: {
                            type: 'hbox'
                        },
                        shrinkWrap: 2,
                        defaultType: 'textfield',
                        defaults: {
                            labelAlign: 'top'
                        },
                        items: [{
                            fieldLabel: '{%trans%}Prefix{%endtrans%}',
                            name: 'nameprefix',
                            allowBlank: true,
                            flex: 1,
                            value: '{{ entity.nameprefix }}'
                        }, {
                            xtype: 'splitter'
                        }, {
                            fieldLabel: '{%trans%}First name{%endtrans%}',
                            name: 'firstname',
                            allowBlank: false,
                            flex: 4,
                            value: '{{ entity.firstname }}'
                        }, {
                            xtype: 'splitter'
                        }, {
                            fieldLabel: '{%trans%}Last name{%endtrans%}',
                            name: 'lastname',
                            flex: 5,
                            value: '{{ entity.lastname }}'
                        }]
                    }, {
                        xtype: 'fieldcontainer',
                        hideLabel: true,
                        layout: {
                            type: 'hbox'
                        },
                        defaultType: 'textfield',
                        defaults: {
                            labelAlign: 'top'
                        },
                        items: [{
                            fieldLabel: '{%trans%}Nickname{%endtrans%}',
                            name: 'nickname',
                            allowBlank: true,
                            flex: 2,
                            value: '{{ entity.nickname }}',


                        }, {
                            xtype: 'splitter'
                        },{
                            fieldLabel: '{%trans%}Initials{%endtrans%}',
                            name: 'initials',
                            allowBlank: true,
                            flex: 1,
                            value: '{{ entity.initials }}'
                        }]

                    }, {
                        xtype: 'fieldcontainer',
                        fieldLabel: 'Email',
                        layout: {
                            type: 'vbox',
                            align: 'stretch'
                        },
                        items:[
                            {
                                xtype: 'fieldcontainer',
                                layout: 'vbox',
                                shrinkWrap: 1,
                                hideLabel: true,
                                padding:5,
                                anchor: '100%',
                                flex: 1,
                                items: emailsinputs
                            },
                            {
                                xtype: 'button',
                                iconCls: 'x-fa fa-plus',
                                text: '{%trans%}Add{%endtrans%}',
                                handler: function(){
                                    var fieldsetcontainer=this.up('fieldcontainer').down('fieldcontainer');
                                    fieldsetcontainer.add(generateEmailinput('',false));
                                    fieldsetcontainer.down('button').setDisabled(false);
                                }
                            }
                        ]
                    }, {
                        xtype: 'fieldcontainer',
                        hideLabel: true,
                        layout: {
                            type: 'hbox'
                            //align: 'middle'
                        },
                        shrinkWrap: 2,
                        defaultType: 'textfield',
                        defaults: {
                            labelAlign: 'top'
                        },
                        items: [{
                            fieldLabel: 'VAT',
                            name: 'vat',
                            allowBlank: true,
                            flex: 1,
                            value: '{{ entity.vat }}'
                        }, {
                            xtype: 'splitter'
                        }, {
                            fieldLabel: 'Tax',
                            name: 'tax',
                            allowBlank: true,
                            flex: 1,
                            value: '{{ entity.tax }}'
                        }]
                    }, {
                        fieldLabel: 'Organisation function',
                        name: 'organizationfunction',
                        allowBlank: true,
                        value: '{{ entity.organizationfunction }}'
                    }, {
                        fieldLabel: 'Birthday',
                        name: 'birthday',
                        xtype: 'datefield',
                        maxValue: new Date(),
                        format: 'Y-m-d',
                        value: '{{ entity.birthday|date('Y-m-d') }}'
                    }]
                },{
                    xtype: 'splitter'
                },{
                    xtype: 'panel',
                    layout: 'fit',
                    html: 'Image...',
                    flex: 1
                    //shrinkWrap: 3 //,
                }]
            }],
            buttons: [{
                text: '{%trans%}Save{%endtrans%}',
                handler: function() {
                    // The getForm() method returns the Ext.form.Basic instance:
                    var form = this.up('form').getForm();
                    if (form.isValid()) {
                        console.log(typeof(ContactModel));
                        var newcontact=Ext.create('ContactModel',form.getValues());
                        console.log(newcontact);
                        
                        // Submit the Ajax request and handle the response
                        newcontact.save({
                            scope: this.up('form'),
                            success: function(contact) {
                                ttt=this;
                                this.up('panel').close();
                                if (typeof Ext.getCmp('contact_contactlist') !='undefined'){
                                    Ext.getCmp('contact_contactlist').getStore().load({
                                        callback: function(records, operation, success) {
                                            //Ext.getCmp('mailclient_maillist').view.scrollTo(0,scrollpos);
                                        }
                                    });
                                }
                               //Ext.Msg.alert('Success', action.result.message);
                            },
                            failure: function(contact) {
                            
                                //Ext.Msg.alert('Failed', action.result ? action.result.message : 'No response');
                            }
                        });
                    }
                }
            }]
        }
    }
}