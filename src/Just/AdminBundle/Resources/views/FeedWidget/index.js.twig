{% set iconsize = '16x16' %}
{% set buttonsize = 'medium' %}
{% if buttonsize == 'large' %}
    {% set iconsize = '32x32' %}
{% endif %}
{
    
    getitems: function (){
    
    
        feedgridFormatTitle= function(value, p, record){
            return Ext.String.format('<div class="topic"><b>{0}</b> <span class="feedgridauthor">{1}</span></div>', value, record.get('creator') || "Unknown");
        };


        feedgridFormatDate= function(date){
            if (!date) {
                return '';
            }
            //return date;
            return Ext.Date.format(date, 'd.m.Y H:i');
        }


        if (typeof Feedmodel == 'undefined'){
            Ext.define('Feedmodel', {
                extend: 'Ext.data.Model',
                fields: [
                    {name: 'title', mapping: 'title'},
                    {name: 'creator', mapping: 'author'},
                    {name: 'created', mapping: 'pubDate', type: 'date'},
                    {name: 'description', mapping: 'description'},
                    {name: 'content', mapping: 'content'},
                    {name: 'link', mapping: 'link'}
                ]
            });
        }

        var feedstore = Ext.create('Ext.data.Store', {
            model: 'Feedmodel',
            autoLoad: true,
            proxy: {
                type: 'ajax',
                url : "{{path('just_admin_feedwidget_loadfeed',{'url': params.url|escape('url')})}}",
                reader: {
                    type: 'xml',
                    rootProperty: 'channel',
                    record: 'item'
                }
            }
        });

        feedgrid = Ext.create('Ext.grid.Panel', {
            store: feedstore,
            cls: 'feedgrid',
            width: '100%',
            height:400,
            stateful: true,
            stateId:'feedwidget_feedgrid_{{id}}',
            viewConfig: {
                itemId: 'feedgrid',
                plugins: [{
                    pluginId: 'preview',
                    ptype: 'preview',
                    bodyField: 'description',
                    expanded: true
                }],
                listeners: {
                    scope: this,
                    itemdblclick: function(view, record, item, index, e) {                        
                        Ext.create('Ext.window.Window', {
                            title: feedstore.getAt(index).data.title,
                            bodyCls: 'feedwindow',
                            height: 400,
                            width: 600,
                            layout: 'fit',
                            autoScroll: true,
                            html: feedstore.getAt(index).data.content+'<br style="clear:both;" />'+feedstore.getAt(index).data.creator+', '+feedstore.getAt(index).data.created,
                        }).show();
                    }
                }
            },
            columns: [{
                    text: 'Title',
                    dataIndex: 'title',
                    flex: 1,
                    renderer: feedgridFormatTitle,
                    stateId:'column_title'
                }, {
                    text: 'Date',
                    dataIndex: 'created',
                    renderer: feedgridFormatDate,
                    width: 100,
                    stateId:'column_created'
                }
                //{ text: 'Description', dataIndex: 'description', sortable: false },
                //{ text: 'Link', dataIndex: 'link', sortable: false }
            ]


        });
    
    
        return feedgrid
        
    }
}