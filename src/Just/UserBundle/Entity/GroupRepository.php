<?php

namespace Just\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * GroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GroupRepository extends EntityRepository
{
    
    public function getTotalcount($filters){
        $query = $this->createQueryBuilder('e');
        $query->select('COUNT(DISTINCT e.id)');
        $z=0;
        foreach($filters as $key => $value){
            $query->andWhere('(e.'.$key.' = :value'.$z);
            $query->setParameter('value'.$z, $value);
        }
        return $query->getQuery()->getSingleScalarResult();
    }
    public function getModelFields(){
        $fields=Array();
        $fields[]=Array('name'=> 'id','type'=>'string','type'=>'int');
        $fields[]=Array('name'=> 'name','type'=>'string');
        $fields[]=Array('name'=> 'roles','type'=>'auto', 'convert'=>'function(value){ if (value && Ext.isArray(value)){ return value; }else if( value && !Ext.isArray(value) ){ return [value]; }else{ return []; }}');
        $fields[]=Array('name'=> 'created','type'=>'date', 'dateFormat'=>'Y-m-d H:i:s');
        $fields[]=Array('name'=> 'updated','type'=>'date', 'dateFormat'=>'Y-m-d H:i:s');
        return $fields;
        
    }
    public function getGridColumns(){
        $columns=Array();
        $columns[]=Array('text'=> 'Id','dataIndex'=> 'id', 'filter'=> Array('type'=> 'number'),'hidden'=> true);
        $columns[]=Array('text'=> 'Name','flex'=> 1,'dataIndex'=> 'name', 'filter'=> Array('type'=> 'string'));
        $columns[]=Array('text'=> 'Roles','flex'=> 1,'dataIndex'=> 'roles', 'filter'=> Array('type'=> 'string'));
        $columns[]=Array('text'=> 'Created','dataIndex'=> 'created', 'xtype'=> 'datecolumn', 'format'=>'Y-m-d H:i:s', 'filter'=> Array('type'=> 'date'),'hidden'=> true);
        $columns[]=Array('text'=> 'Updated','dataIndex'=> 'updated', 'xtype'=> 'datecolumn', 'format'=>'Y-m-d H:i:s', 'filter'=> Array('type'=> 'date'),'hidden'=> true);
        return $columns;
        
    }
}
